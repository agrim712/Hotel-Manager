// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}


datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}
model User {
  id        String   @id @default(uuid())
  email     String   @unique
  password  String
  role      Role
  hotel     Hotel?   @relation(fields: [hotelId], references: [id])
  hotelId   String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Hotel {
  id              String   @id @default(cuid())
  name            String
  address         String   @unique
  country         String?   // <-- optional
  city            String?
  contactPerson   String?
  phoneCode       String?
  phoneNumber     String?
  whatsappNumber  String?
  totalRooms      Int?
  email           String?   
  propertyType    String?
  currency        String?
  products        String[]
  rooms           Room[]
  users           User[]
  isPaymentDone   Boolean  @default(false) // Tracks if the payment for the hotel has been completed
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
}

model Room {
  id             String   @id @default(cuid())
  name           String
  numOfRooms     Int
  maxGuests      Int
  rateType       String
  rate           Float
  extraAdultRate Float?
  roomNumbers    String[] // âœ… Still store this for onboarding
  hotelId        String
  hotel          Hotel    @relation(fields: [hotelId], references: [id])
  roomUnits      RoomUnit[]
}
model RoomUnit {
  id         String      @id @default(cuid())
  roomNumber String
  status     RoomStatus  @default(AVAILABLE)
  notes      String?
  floor      Int?
  roomId     String
  room       Room        @relation(fields: [roomId], references: [id])
}
enum RoomStatus {
  AVAILABLE
  BOOKED
  MAINTENANCE
}

enum Role {
  SUPERADMIN
  HOTELADMIN
}